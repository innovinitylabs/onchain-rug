{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202d250e3eb331d324017f882fd6e8d35f5816e325fa84746a9d45f920562e162e64736f6c634300081e0033","sourceMap":"636:11235:60:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202d250e3eb331d324017f882fd6e8d35f5816e325fa84746a9d45f920562e162e64736f6c634300081e0033","sourceMap":"636:11235:60:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"First, allocate memory.      Then use `buffer.appendUnchecked(theBytes)` or `appendSafe()` if      bounds checking is required.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"memory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/scripty/utils/DynamicBuffer.sol\":\"DynamicBuffer\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":scripty.sol/=lib/scripty.sol/contracts/scripty/\",\":solady/=lib/solady/src/\",\":sstore2/=lib/sstore2/contracts/\"]},\"sources\":{\"src/scripty/utils/DynamicBuffer.sol\":{\"keccak256\":\"0x0595b584f5816788a01e4d978b6c4ba839fa6f6f9ec3efbddcfeb10d7d19b9ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295003a58f7e9e31865e6f5e03ce71469afdf165894ac157bfa714c69f651a17\",\"dweb:/ipfs/QmPJGZGYwzCcUJu7AVk5oyPAXexY9jKXFwq6YkCFisKK47\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","scripty.sol/=lib/scripty.sol/contracts/scripty/","solady/=lib/solady/src/","sstore2/=lib/sstore2/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/scripty/utils/DynamicBuffer.sol":"DynamicBuffer"},"evmVersion":"prague","libraries":{}},"sources":{"src/scripty/utils/DynamicBuffer.sol":{"keccak256":"0x0595b584f5816788a01e4d978b6c4ba839fa6f6f9ec3efbddcfeb10d7d19b9ee","urls":["bzz-raw://295003a58f7e9e31865e6f5e03ce71469afdf165894ac157bfa714c69f651a17","dweb:/ipfs/QmPJGZGYwzCcUJu7AVk5oyPAXexY9jKXFwq6YkCFisKK47"],"license":"MIT"}},"version":1},"id":60}